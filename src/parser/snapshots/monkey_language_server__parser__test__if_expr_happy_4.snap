---
source: src/parser/test.rs
description: "if (x < y) { x } else { let z = x + y; z }"
expression: result
---
[
    If {
        token: Token(If, "if", (0,0)->(0,2)),
        condition: Ok(
            Infix {
                token: Token(LT, "<", (0,6)->(0,7)),
                left: Identifier {
                    token: Token(Identifier, "x", (0,4)->(0,5)),
                    name: "x",
                },
                right: Identifier {
                    token: Token(Identifier, "y", (0,8)->(0,9)),
                    name: "y",
                },
                operator: Lt,
            },
        ),
        consequence: Ok(
            Block {
                token: Token(LBrace, "{", (0,11)->(0,12)),
                statements: [
                    Identifier {
                        token: Token(Identifier, "x", (0,13)->(0,14)),
                        name: "x",
                    },
                ],
                range: Range {
                    start: Position {
                        line: 0,
                        character: 11,
                    },
                    end: Position {
                        line: 0,
                        character: 15,
                    },
                },
            },
        ),
        alternative: Ok(
            Some(
                Block {
                    token: Token(LBrace, "{", (0,22)->(0,23)),
                    statements: [
                        Let {
                            token: Token(Let, "let", (0,24)->(0,27)),
                            name: Identifier {
                                token: Token(Identifier, "z", (0,28)->(0,29)),
                                name: "z",
                            },
                            value: Infix {
                                token: Token(Plus, "+", (0,34)->(0,35)),
                                left: Identifier {
                                    token: Token(Identifier, "x", (0,32)->(0,33)),
                                    name: "x",
                                },
                                right: Identifier {
                                    token: Token(Identifier, "y", (0,36)->(0,37)),
                                    name: "y",
                                },
                                operator: Plus,
                            },
                            range: Range {
                                start: Position {
                                    line: 0,
                                    character: 24,
                                },
                                end: Position {
                                    line: 0,
                                    character: 38,
                                },
                            },
                        },
                        Identifier {
                            token: Token(Identifier, "z", (0,39)->(0,40)),
                            name: "z",
                        },
                    ],
                    range: Range {
                        start: Position {
                            line: 0,
                            character: 22,
                        },
                        end: Position {
                            line: 0,
                            character: 41,
                        },
                    },
                },
            ),
        ),
    },
]

===================================

if (x < y) { x } else { let z = x + y; z }
