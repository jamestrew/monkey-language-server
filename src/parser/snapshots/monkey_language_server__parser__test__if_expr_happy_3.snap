---
source: src/parser/test.rs
description: "if (x < y) { x } else { y }"
expression: result
---
[
    If {
        token: Token(If, "if", (0,0)->(0,2)),
        condition: Ok(
            Infix {
                token: Token(LT, "<", (0,6)->(0,7)),
                left: Identifier {
                    token: Token(Identifier, "x", (0,4)->(0,5)),
                    name: "x",
                },
                right: Identifier {
                    token: Token(Identifier, "y", (0,8)->(0,9)),
                    name: "y",
                },
                operator: Lt,
            },
        ),
        consequence: Ok(
            Block {
                token: Token(LBrace, "{", (0,11)->(0,12)),
                statements: [
                    Identifier {
                        token: Token(Identifier, "x", (0,13)->(0,14)),
                        name: "x",
                    },
                ],
                start: (0,11),
                end: (0,15),
            },
        ),
        alternative: Ok(
            Some(
                Block {
                    token: Token(LBrace, "{", (0,22)->(0,23)),
                    statements: [
                        Identifier {
                            token: Token(Identifier, "y", (0,24)->(0,25)),
                            name: "y",
                        },
                    ],
                    start: (0,22),
                    end: (0,26),
                },
            ),
        ),
    },
]

===================================

if (x < y) { x } else { y }
